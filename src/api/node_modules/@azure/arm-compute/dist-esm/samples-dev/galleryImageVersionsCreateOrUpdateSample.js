/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithVmAsSource.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingVMAsSource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                source: {
                    id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/virtualMachines/{vmName}"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithCommunityImageVersionAsSource.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingCommunityGalleryImageAsSource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                source: {
                    communityGalleryImageId: "/communityGalleries/{communityGalleryName}/images/{communityGalleryImageName}"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingManagedImageAsSource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                source: {
                    id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithSnapshotsAsSource.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingMixOfDisksAndSnapshotsAsASource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                dataDiskImages: [
                    {
                        hostCaching: "None",
                        lun: 1,
                        source: {
                            id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/disks/{dataDiskName}"
                        }
                    }
                ],
                osDiskImage: {
                    hostCaching: "ReadOnly",
                    source: {
                        id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}"
                    }
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithShallowReplicationMode.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingShallowReplicationMode() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                replicationMode: "Shallow",
                targetRegions: [
                    { name: "West US", excludeFromLatest: false, regionalReplicaCount: 1 }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                source: {
                    id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithImageVersionAsSource.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingSharedImageAsSource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                source: {
                    id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionName}"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithSnapshotsAsSource.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingSnapshotsAsASource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                dataDiskImages: [
                    {
                        hostCaching: "None",
                        lun: 1,
                        source: {
                            id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/disks/{dataDiskName}"
                        }
                    }
                ],
                osDiskImage: {
                    hostCaching: "ReadOnly",
                    source: {
                        id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}"
                    }
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithVHD.json
 */
function createOrUpdateASimpleGalleryImageVersionUsingVhdAsASource() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                dataDiskImages: [
                    {
                        hostCaching: "None",
                        lun: 1,
                        source: {
                            id: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}",
                            uri: "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd"
                        }
                    }
                ],
                osDiskImage: {
                    hostCaching: "ReadOnly",
                    source: {
                        id: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}",
                        uri: "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd"
                    }
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update a gallery image version.
 *
 * @summary Create or update a gallery image version.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2022-03-03/examples/galleryExamples/GalleryImageVersion_Create_WithTargetExtendedLocations.json
 */
function createOrUpdateASimpleGalleryImageVersionWithTargetExtendedLocationsSpecified() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COMPUTE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["COMPUTE_RESOURCE_GROUP"] || "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryImageName = "myGalleryImageName";
        const galleryImageVersionName = "1.0.0";
        const galleryImageVersion = {
            location: "West US",
            publishingProfile: {
                targetRegions: [
                    {
                        name: "West US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 1
                    },
                    {
                        name: "East US",
                        encryption: {
                            dataDiskImages: [
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
                                    lun: 0
                                },
                                {
                                    diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
                                    lun: 1
                                }
                            ],
                            osDiskImage: {
                                diskEncryptionSetId: "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"
                            }
                        },
                        excludeFromLatest: false,
                        regionalReplicaCount: 2,
                        storageAccountType: "Standard_ZRS"
                    }
                ]
            },
            safetyProfile: { allowDeletionOfReplicatedLocations: false },
            storageProfile: {
                source: {
                    id: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.galleryImageVersions.beginCreateOrUpdateAndWait(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createOrUpdateASimpleGalleryImageVersionUsingVMAsSource();
        createOrUpdateASimpleGalleryImageVersionUsingCommunityGalleryImageAsSource();
        createOrUpdateASimpleGalleryImageVersionUsingManagedImageAsSource();
        createOrUpdateASimpleGalleryImageVersionUsingMixOfDisksAndSnapshotsAsASource();
        createOrUpdateASimpleGalleryImageVersionUsingShallowReplicationMode();
        createOrUpdateASimpleGalleryImageVersionUsingSharedImageAsSource();
        createOrUpdateASimpleGalleryImageVersionUsingSnapshotsAsASource();
        createOrUpdateASimpleGalleryImageVersionUsingVhdAsASource();
        createOrUpdateASimpleGalleryImageVersionWithTargetExtendedLocationsSpecified();
    });
}
main().catch(console.error);
//# sourceMappingURL=galleryImageVersionsCreateOrUpdateSample.js.map
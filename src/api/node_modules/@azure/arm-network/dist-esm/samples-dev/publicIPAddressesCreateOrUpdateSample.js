/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { NetworkManagementClient } from "@azure/arm-network";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates or updates a static or dynamic public IP address.
 *
 * @summary Creates or updates a static or dynamic public IP address.
 * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-09-01/examples/PublicIpAddressCreateDns.json
 */
function createPublicIPAddressDns() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETWORK_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["NETWORK_RESOURCE_GROUP"] || "rg1";
        const publicIpAddressName = "test-ip";
        const parameters = {
            dnsSettings: { domainNameLabel: "dnslbl" },
            location: "eastus"
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = yield client.publicIPAddresses.beginCreateOrUpdateAndWait(resourceGroupName, publicIpAddressName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Creates or updates a static or dynamic public IP address.
 *
 * @summary Creates or updates a static or dynamic public IP address.
 * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-09-01/examples/PublicIpAddressCreateCustomizedValues.json
 */
function createPublicIPAddressAllocationMethod() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETWORK_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["NETWORK_RESOURCE_GROUP"] || "rg1";
        const publicIpAddressName = "test-ip";
        const parameters = {
            idleTimeoutInMinutes: 10,
            location: "eastus",
            publicIPAddressVersion: "IPv4",
            publicIPAllocationMethod: "Static",
            sku: { name: "Standard", tier: "Global" }
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = yield client.publicIPAddresses.beginCreateOrUpdateAndWait(resourceGroupName, publicIpAddressName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Creates or updates a static or dynamic public IP address.
 *
 * @summary Creates or updates a static or dynamic public IP address.
 * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-09-01/examples/PublicIpAddressCreateDefaults.json
 */
function createPublicIPAddressDefaults() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETWORK_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["NETWORK_RESOURCE_GROUP"] || "rg1";
        const publicIpAddressName = "test-ip";
        const parameters = { location: "eastus" };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = yield client.publicIPAddresses.beginCreateOrUpdateAndWait(resourceGroupName, publicIpAddressName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createPublicIPAddressDns();
        createPublicIPAddressAllocationMethod();
        createPublicIPAddressDefaults();
    });
}
main().catch(console.error);
//# sourceMappingURL=publicIPAddressesCreateOrUpdateSample.js.map
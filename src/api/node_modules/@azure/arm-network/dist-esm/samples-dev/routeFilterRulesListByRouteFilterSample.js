/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { NetworkManagementClient } from "@azure/arm-network";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Gets all RouteFilterRules in a route filter.
 *
 * @summary Gets all RouteFilterRules in a route filter.
 * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-09-01/examples/RouteFilterRuleListByRouteFilter.json
 */
function routeFilterRuleListByRouteFilter() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETWORK_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["NETWORK_RESOURCE_GROUP"] || "rg1";
        const routeFilterName = "filterName";
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.routeFilterRules.listByRouteFilter(resourceGroupName, routeFilterName)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        routeFilterRuleListByRouteFilter();
    });
}
main().catch(console.error);
//# sourceMappingURL=routeFilterRulesListByRouteFilterSample.js.map
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { NetworkManagementClient } from "@azure/arm-network";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
 *
 * @summary The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
 * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-09-01/examples/VirtualNetworkGatewaySetVpnClientIpsecParameters.json
 */
function setVirtualNetworkGatewayVpnClientIpsecParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETWORK_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["NETWORK_RESOURCE_GROUP"] || "rg1";
        const virtualNetworkGatewayName = "vpngw";
        const vpnclientIpsecParams = {
            dhGroup: "DHGroup2",
            ikeEncryption: "AES256",
            ikeIntegrity: "SHA384",
            ipsecEncryption: "AES256",
            ipsecIntegrity: "SHA256",
            pfsGroup: "PFS2",
            saDataSizeKilobytes: 429497,
            saLifeTimeSeconds: 86473
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = yield client.virtualNetworkGateways.beginSetVpnclientIpsecParametersAndWait(resourceGroupName, virtualNetworkGatewayName, vpnclientIpsecParams);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        setVirtualNetworkGatewayVpnClientIpsecParameters();
    });
}
main().catch(console.error);
//# sourceMappingURL=virtualNetworkGatewaysSetVpnclientIpsecParametersSample.js.map